<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <bean id="aopTestTrigger" class="cn.lytmac.spring.test.aop.AopTestTrigger"/>
    <bean id="baseObject" class="cn.lytmac.spring.test.aop.target.BaseObject"/>

    <bean id="aspect" class="cn.lytmac.spring.test.aop.aspect.IntegratedAspect"/>

    <!--proxy-target-class == TRUE : AOP基于继承基类做动态代理 - cglib -->
    <!--proxy-target-class == FALSE : AOP基于实现接口做动态代理 - jdk proxy -->
    <aop:config proxy-target-class="true">


        <!--pointcut, advisor, aspect 必须按照这个顺序声明-->

        <!--定义切点-->
        <aop:pointcut id="pointcut" expression="execution(public * cn.lytmac.spring.test.aop.target.*.*(..))"/>

        <!--定义切面-->
        <aop:aspect id="aspect" ref="aspect">
            <aop:before method="before" pointcut-ref="pointcut"/>
            <aop:after method="after" pointcut-ref="pointcut"/>
            <aop:around method="around" pointcut-ref="pointcut"/>
            <aop:after-returning method="afterReturning" pointcut-ref="pointcut"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut"/>
        </aop:aspect>

    </aop:config>

    <aop:aspectj-autoproxy/>

</beans>